#loc = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":54:0)
module {
  tt.func public @nested_use_same_level_loop_results(%arg0: !tt.ptr<f32> loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":54:0), %arg1: !tt.ptr<f32> loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":54:0), %arg2: i32 loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":54:0), %arg3: i32 loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":54:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %0 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 1 : i32} : tensor<2xi32> -> tensor<2x1xi32> loc(#loc3)
    %2 = tt.splat %arg2 : i32 -> tensor<2x1xi32> loc(#loc4)
    %3 = arith.muli %1, %2 : tensor<2x1xi32> loc(#loc4)
    %4 = tt.expand_dims %0 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc5)
    %5 = tt.splat %arg3 : i32 -> tensor<1x2xi32> loc(#loc6)
    %6 = arith.muli %4, %5 : tensor<1x2xi32> loc(#loc6)
    %7 = tt.broadcast %3 : tensor<2x1xi32> -> tensor<2x2xi32> loc(#loc7)
    %8 = tt.broadcast %6 : tensor<1x2xi32> -> tensor<2x2xi32> loc(#loc7)
    %9 = arith.addi %7, %8 : tensor<2x2xi32> loc(#loc7)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2x2x!tt.ptr<f32>> loc(#loc8)
    %11 = tt.addptr %10, %9 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc8)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2x1x!tt.ptr<f32>> loc(#loc9)
    %13 = tt.addptr %12, %3 : tensor<2x1x!tt.ptr<f32>>, tensor<2x1xi32> loc(#loc9)
    %14 = tt.broadcast %13 : tensor<2x1x!tt.ptr<f32>> -> tensor<2x2x!tt.ptr<f32>> loc(#loc10)
    %15 = tt.addptr %14, %8 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc10)
    %16 = arith.muli %arg3, %c2_i32 : i32 loc(#loc11)
    %17 = tt.splat %16 : i32 -> tensor<2x2xi32> loc(#loc12)
    %18 = arith.muli %arg3, %c2_i32 : i32 loc(#loc13)
    %19 = tt.splat %18 : i32 -> tensor<2x2xi32> loc(#loc14)
    %20 = arith.muli %arg3, %c2_i32 : i32 loc(#loc15)
    %21 = tt.splat %20 : i32 -> tensor<2x2xi32> loc(#loc16)
    %22:2 = scf.for %arg4 = %c0_i32 to %c2_i32 step %c1_i32 iter_args(%arg5 = %11, %arg6 = %15) -> (tensor<2x2x!tt.ptr<f32>>, tensor<2x2x!tt.ptr<f32>>)  : i32 {
      %23 = scf.for %arg7 = %c0_i32 to %c2_i32 step %c1_i32 iter_args(%arg8 = %arg5) -> (tensor<2x2x!tt.ptr<f32>>)  : i32 {
        %26 = tt.addptr %arg8, %17 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc12)
        scf.yield %26 : tensor<2x2x!tt.ptr<f32>> loc(#loc19)
      } loc(#loc18)
      %24:2 = scf.for %arg7 = %c0_i32 to %c2_i32 step %c1_i32 iter_args(%arg8 = %23, %arg9 = %arg6) -> (tensor<2x2x!tt.ptr<f32>>, tensor<2x2x!tt.ptr<f32>>)  : i32 {
        %26 = tt.load %arg8 : tensor<2x2x!tt.ptr<f32>> loc(#loc21)
        %27 = tt.addptr %arg8, %19 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc14)
        %28 = tt.load %27 : tensor<2x2x!tt.ptr<f32>> loc(#loc22)
        tt.store %arg9, %26 : tensor<2x2x!tt.ptr<f32>> loc(#loc23)
        %29 = tt.addptr %arg9, %19 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc24)
        %30 = tt.addptr %29, %19 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc25)
        tt.store %30, %28 : tensor<2x2x!tt.ptr<f32>> loc(#loc26)
        %31 = tt.addptr %30, %19 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc27)
        %32 = tt.addptr %27, %19 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc28)
        scf.yield %32, %31 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2x!tt.ptr<f32>> loc(#loc29)
      } loc(#loc20)
      %25 = tt.addptr %24#0, %21 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2xi32> loc(#loc16)
      scf.yield %25, %24#1 : tensor<2x2x!tt.ptr<f32>>, tensor<2x2x!tt.ptr<f32>> loc(#loc30)
    } loc(#loc17)
    tt.return loc(#loc31)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":55:27)
#loc3 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":57:31)
#loc4 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":57:42)
#loc5 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":58:32)
#loc6 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":58:43)
#loc7 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":58:24)
#loc8 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":57:23)
#loc9 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":62:23)
#loc10 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":62:53)
#loc11 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":69:26)
#loc12 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":69:22)
#loc13 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":73:26)
#loc14 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":73:22)
#loc15 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":83:22)
#loc16 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":83:18)
#loc17 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":65:23)
#loc18 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":68:27)
#loc19 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":69:12)
#loc20 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":71:27)
#loc21 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":72:25)
#loc22 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":74:25)
#loc23 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":75:29)
#loc24 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":76:22)
#loc25 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":78:22)
#loc26 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":79:29)
#loc27 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":80:22)
#loc28 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":81:22)
#loc29 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":81:12)
#loc30 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":83:8)
#loc31 = loc("/home/nhat/triton-scratchpad/ptrs/bitcast.py":65:4)